# Generated by Django 3.2.16 on 2023-07-06 19:10

import core.mixins
from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(help_text='Maximum of 50 symbols', max_length=50, unique=True, verbose_name='username')),
                ('bio', models.TextField(default='', help_text='Maximum of 500 symbols', max_length=500, verbose_name='bio')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('normalized_email', users.models.NormalizedEmailField(max_length=254, unique=True, verbose_name='normalized_email')),
                ('image', models.ImageField(default='images/default_avatar.png', upload_to=users.models.User.get_image_path, verbose_name='avatar')),
                ('date_joined', models.DateTimeField(auto_now=True, verbose_name='date_joined')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(models.Model, core.mixins.ImageMixin),
        ),
    ]
